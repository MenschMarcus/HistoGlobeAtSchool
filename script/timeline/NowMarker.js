// Generated by CoffeeScript 1.8.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

if (window.HG == null) {
  window.HG = {};
}

HG.NowMarker = (function() {
  function NowMarker(timeline, container, speedometer) {
    this.jumpToBack = __bind(this.jumpToBack, this);
    this.jumpToFront = __bind(this.jumpToFront, this);
    this.animationSwitch = __bind(this.animationSwitch, this);
    this.addButton = __bind(this.addButton, this);
    this._timeline = timeline;
    this._container = container;
    this._speedometer = speedometer === "true";
    this._uiElements = {
      arrow: {},
      arrow_2: {},
      init: function(tl, container) {
        this.arrow = tl.addUIElement("now_marker_arrow", null, document.getElementById("histoglobe"));
        return this.arrow_2 = tl.addUIElement("now_marker_arrow_bottom", null, document.getElementById("histoglobe"));
      }
    };
    this._uiElements.init(this._timeline, this._container);

    /*@addButton @_uiElements.toBackButton, @jumpToBack
    
    @_uiElements.dateInput.name         = "now_date"
    @_uiElements.dateInput.type         = "text"
    @_uiElements.dateInput.maxlength    = 10
    @_uiElements.dateInput.size         = 10
    
    $(@_uiElements.pointer).rotate(0)
    $(@_uiElements.pointer).css
        "display" : "none" if !@_speedometer
     */
    $(window).resize((function(_this) {
      return function() {
        return _this._updatePositions();
      };
    })(this));
    this._updatePositions();
    if (this._speedometer) {
      this._clicked = false;
      this._hiddenSpeed = 0;
      this._container.onmousedown = (function(_this) {
        return function(e) {
          if ((_this._distanceToMiddlepoint(e) - 75) >= 0) {
            _this._clicked = true;
            return _this._disableTextSelection(e);
          }
        };
      })(this);
      this._container.onmousemove = (function(_this) {
        return function(e) {
          if (_this._clicked) {
            if (!_this._timeline.getPlayStatus()) {
              _this._playButton.className = "fa fa-play";
            }
            _this._hiddenSpeed = e.pageX - _this._middlePointX;
            return $(_this._uiElements.pointer).rotate(_this._angleOnCircle(e));
          }
        };
      })(this);
      this._container.onmouseup = (function(_this) {
        return function(e) {
          if (_this._clicked) {
            _this._timeline.setSpeed((_this._radius + e.pageX - _this._middlePointX) / _this._radius);
            $(_this._uiElements.pointer).rotate(_this._angleOnCircle(e));
            _this._enableTextSelection();
            return _this._clicked = false;
          }
        };
      })(this);
    }
    $(this._uiElements.dateInput).keyup((function(_this) {
      return function(e) {
        var d;
        if (e.keyCode === 13) {
          d = _this._timeline.stringToDate(_this._uiElements.dateInput.value);
          return _this._timeline.moveToDate(d, 1);
        }
      };
    })(this));
  }

  NowMarker.prototype.nowDateChanged = function() {
    var date, day, month, year;
    date = this._timeline.getNowDate();
    day = date.getDate() + "";
    if (day.length === 1) {
      day = "0" + day;
    }
    month = (date.getMonth() + 1) + "";
    if (month.length === 1) {
      month = "0" + month;
    }
    year = date.getFullYear() + "";
    return console.log("Now Date Changed " + day + "." + month + "." + year);
  };

  NowMarker.prototype.addButton = function(buttonDiv, callback) {
    this._uiElements.buttonArea.appendChild(buttonDiv);
    return buttonDiv.onclick = callback;
  };

  NowMarker.prototype.clearButtons = function() {
    return $(this._uiElements.buttonArea).empty();
  };

  NowMarker.prototype.animationSwitch = function() {
    if (this._timeline.getPlayStatus()) {
      this._timeline.stopTimeline();
      return this._uiElements.playButton.className = "fa fa-play now_marker_button";
    } else {
      this._timeline.playTimeline();
      return this._uiElements.playButton.className = "fa fa-pause now_marker_button";
    }
  };

  NowMarker.prototype.jumpToFront = function() {
    if (this._timeline.getPlayStatus()) {
      this._timeline.stopTimeline();
    }
    return this._timeline.moveToDate(this._timeline.yearToDate(this._timeline.getMinYear()), 0.5);
  };

  NowMarker.prototype.jumpToBack = function() {
    if (this._timeline.getPlayStatus()) {
      this._timeline.stopTimeline();
    }
    return this._timeline.moveToDate(this._timeline.yearToDate(this._timeline.getMaxYear()), 0.5);
  };

  NowMarker.prototype._distanceToMiddlepoint = function(e) {
    var xs, ys;
    xs = 0;
    ys = 0;
    xs = e.pageX - this._middlePointX;
    xs = xs * xs;
    ys = e.pageY - this._middlePointY;
    ys = ys * ys;
    return Math.sqrt(xs + ys);
  };

  NowMarker.prototype._angleOnCircle = function(e) {
    var angle, fac, mY, res, res2, res2a, res2b, vectorAX, vectorAY, vectorBX, vectorBY;
    mY = window.innerHeight - this._middlePointY;
    fac = 180 / Math.PI;
    vectorAX = 0;
    vectorAY = 100;
    vectorBX = e.pageX - this._middlePointX;
    vectorBY = window.innerHeight - e.pageY - mY;
    res = vectorAX * vectorBX + vectorAY * vectorBY;
    res2a = Math.sqrt(Math.pow(vectorAX, 2) + Math.pow(vectorAY, 2));
    res2b = Math.sqrt(Math.pow(vectorBX, 2) + Math.pow(vectorBY, 2));
    res2 = res / (res2a * res2b);
    angle = Math.acos(res2) * fac;
    if (e.pageX < this._middlePointX) {
      angle *= -1;
    }
    return angle;
  };

  NowMarker.prototype._updatePositions = function() {

    /*@_container.style.left    = window.innerWidth / 2 - @_container.offsetWidth / 2 + "px"
    @_container.style.bottom  = @_timeline.getLayout().tl.offsetHeight + "px"
    @_container.style.visibility = "visible"
     */

    /*@_middlePointX      = window.innerWidth / 2
    @_middlePointY      = window.innerHeight - @_timeline.getLayout().tl.offsetHeight
    @_radius            = @_container.offsetHeight
     */
    this._uiElements.arrow.style.left = window.innerWidth / 2 - 10 + "px";
    return this._uiElements.arrow_2.style.left = window.innerWidth / 2 - 10 + "px";
  };

  NowMarker.prototype._disableTextSelection = function(e) {
    return false;
  };

  NowMarker.prototype._enableTextSelection = function() {
    return true;
  };

  return NowMarker;

})();
